/* stylelint-disable */
@import "@scss/utills/variables";
/* stylelint-enable */

@mixin reset {
  margin: 0;
  padding: 0;
}

@mixin reset_button {
  outline: none;
  border: none;
  background: transparent;

  @include reset();
}

@mixin text {
  text-rendering: optimizelegibility;
  text-decoration: none;
  letter-spacing: 0;
  font-style: normal;
}

@mixin text-format($font-size, $font-weight, $line-height) {
  font-size: $font-size;
  font-weight: $font-weight;
  line-height: $line-height;
}

@mixin text_h_h1 {
  font-size: 54px;
  font-weight: 800;
  line-height: 1.2;
}

@mixin text_h_h3 {
  font-size: 28px;
  font-weight: 700;
  line-height: 1.25;
}

@mixin text_type_lead {
  font-size: 24px;
  font-weight: 500;
  line-height: 1.45;
}

@mixin text_type_section {
  font-size: 36px;
  font-weight: 700;
  line-height: 1.25;
}

@mixin text_type_regular {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
}

@mixin text_type_card-title {
  font-size: 20px;
  font-weight: 700;
  line-height: 1.3;
}

@mixin text_type_fail {
  font-size: 12px;
  font-weight: 500;
  line-height: 1.2;
  color: $colorTypeFail;
}

@mixin text_type_header {
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
}

@mixin text_type_footer {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  text-decoration-line: underline;
  color: $colorLinkFooter;
}

@mixin hover-animation {
  transition: opacity 0.3s ease;

  &:hover {
    opacity: 0.5;
  }
}

@mixin _button() {
  padding-left: 16px;
  padding-right: 16px;
  border-radius: 32px;
  text-align: center;
}

@mixin button_type_fill {
  @include _button();

  background-color: $primaryGreenColor;

  &:hover {
    background-color: $colorGreenDarker;
  }
}

@mixin button_type_outline {
  @include _button();

  border: 1px solid $primaryGreenColor;

  &:hover {
    border-color: $colorGreenDarker;
  }
}

@mixin button_type_transparent {
  @include _button();

  background-color: transparent;

  &:hover {
    background-color: rgb(255 255 255 / 4%);
  }
}

@mixin media-breakpoint-up($breakpoint) {
  $min-width: map-get($breakpoints, $breakpoint);

  @media (min-width: $min-width) {
    @content;
  }
}

@mixin container-max-widths {
  @each $breakpoint, $size in $container-max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $size;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

@mixin media($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint #{$breakpoint} не найден в переменной $breakpoints";
  }
}
